<?php

namespace AppBundle\Repository;

/**
 * PassengerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PassengerRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * isAlreadyExist
     *
     * @return type
     */
    public function isAlreadyExist($nationalite, $numero, $nom, $prenom, $dateNaissance, $sexe, $dateVoyage, $transport, $sens, $posteFrontiere)
    {
        $dql = " SELECT psg
            FROM AppBundle:Passenger psg
            WHERE psg.nationalite = (?1)
            AND psg.numero = (?2)
            AND psg.nom = (?3)
            AND psg.prenom = (?4)
            AND psg.dateNaissance LIKE :dateNaissance
            AND psg.sexe = (?5)
            AND psg.dateVoyage LIKE :dateVoyage
            AND psg.transport = (?6)
            AND psg.sens = (?7)
            AND psg.posteFrontiere = (?8)
        ";
        $datetime = new \DateTime();
        $dateNais = $datetime->createFromFormat('d/m/Y', $dateNaissance);
        $datetime2 = new \DateTime();
        $dateV = $datetime2->createFromFormat('d/m/Y', $dateVoyage);
        $query = $this->_em->createQuery($dql)
                ->setParameter(1, $nationalite)
                ->setParameter(2, $numero)
                ->setParameter(3, $nom)
                ->setParameter(4, $prenom)
                ->setParameter('dateNaissance',$dateNais->format('Y-m-d').'%')
                ->setParameter(5, $sexe)
                ->setParameter('dateVoyage',$dateV->format('Y-m-d').'%')
                ->setParameter(6, $transport)
                ->setParameter(7, $sens)
                ->setParameter(8, $posteFrontiere)
            ;
                
        $result = $query->getResult();
        if(count($result)>0){
            return true;
        }
        else {
            return false;
        }
        
    }

    /**
     * exportPassenger
     *
     * @return type
     */
    public function exportPassenger($nationalite, $numero, $nom, $prenom, $dateNaissance, $sexe, $dateVoyage, $transport, $sens, $posteFrontiere, $dateDebNais, $dateFinNais, $dateDebVoyage, $dateFinVoyage)
    {
        if (is_null($nationalite) && is_null($numero) && is_null($nom) && is_null($prenom) && is_null($dateNaissance) && is_null($sexe) && is_null($dateVoyage) && is_null($transport) && is_null($sens) && is_null($posteFrontiere)){
            return -1;
        }
        elseif (($dateDebNais=="")&&($dateFinNais=="")&&($dateDebVoyage=="")&&($dateFinVoyage=="")){
            $dql = " SELECT psg
            FROM AppBundle:Passenger psg
                    ";
            $query = $this->_em->createQuery($dql);
            $result = $query->getResult();
            return $result;
        } elseif (($dateDebNais!="")&&($dateFinNais!="")&&($dateDebVoyage=="")&&($dateFinVoyage=="")){
            $dql = " SELECT psg
            FROM AppBundle:Passenger psg
            WHERE psg.dateNaissance BETWEEN :start AND :end
                    ";
            $datetime = new \DateTime();
            $dateDebNaissance = $datetime->createFromFormat('d/m/Y', $dateDebNais);
            $datetime2 = new \DateTime();
            $dateFinNaissance = $datetime2->createFromFormat('d/m/Y', $dateFinNais);
            $query = $this->_em->createQuery($dql)
                ->setParameter('start',$dateDebNaissance->format('Y-m-d').'%')
                ->setParameter('end',$dateFinNaissance->format('Y-m-d').'%');
            $result = $query->getResult();
            return $result;
        } elseif (($dateDebNais=="")&&($dateFinNais=="")&&($dateDebVoyage!="")&&($dateFinVoyage!="")){
            $dql = " SELECT psg
            FROM AppBundle:Passenger psg
            WHERE psg.dateVoyage BETWEEN :start AND :end
                    ";
            $datetime3 = new \DateTime();
            $dateStartVoyage = $datetime3->createFromFormat('d/m/Y', $dateDebVoyage);
            $datetime4 = new \DateTime();
            $dateEndVoyage = $datetime4->createFromFormat('d/m/Y', $dateFinVoyage);
            $query = $this->_em->createQuery($dql)
                ->setParameter('start',$dateStartVoyage->format('Y-m-d').'%')
                ->setParameter('end',$dateEndVoyage->format('Y-m-d').'%');
            $result = $query->getResult();
            return $result;
        } elseif (($dateDebNais!="")&&($dateFinNais!="")&&($dateDebVoyage!="")&&($dateFinVoyage!="")) {
            $dql = " SELECT psg
            FROM AppBundle:Passenger psg
            WHERE psg.dateNaissance BETWEEN :startNais AND :endNais
            AND psg.dateVoyage BETWEEN :startVoyage AND :endVoyage
                    ";
            $datetime = new \DateTime();
            $dateDebNaissance = $datetime->createFromFormat('d/m/Y', $dateDebNais);
            $datetime2 = new \DateTime();
            $dateFinNaissance = $datetime2->createFromFormat('d/m/Y', $dateFinNais);

            $datetime3 = new \DateTime();
            $dateStartVoyage = $datetime3->createFromFormat('d/m/Y', $dateDebVoyage);
            $datetime4 = new \DateTime();
            $dateEndVoyage = $datetime4->createFromFormat('d/m/Y', $dateFinVoyage);

            $query = $this->_em->createQuery($dql)
                ->setParameter('startNais', $dateDebNaissance->format('Y-m-d').'%')
                ->setParameter('endNais', $dateFinNaissance->format('Y-m-d').'%')
                ->setParameter('startVoyage', $dateStartVoyage->format('Y-m-d').'%')
                ->setParameter('endVoyage', $dateEndVoyage->format('Y-m-d').'%');
            $result = $query->getResult();
            return $result;
        } else {
            return -2;
        }
    }

}
